parameters:

services:

  # Example, execute jobs on flush.

  resque.array_job_executor:
    class: Resque\Bundle\ResqueBundle\EventListener\OnTerminateJobExecutor
    arguments:
      - @resque.worker.job_performer
      - @resque.queue.registry
    tags:
       - { name: kernel.event_listener, event: kernel.terminate, method: executeOutstandingJobs, priority: -5120  }
       - { name: kernel.event_listener, event: console.terminate, method: executeOutstandingJobs, priority: -5120  }

  # Core

  resque.event_dispatcher:
    class: Resque\Bundle\ResqueBundle\Bridge\EventDispatcher
    arguments:
      - @event_dispatcher

  resque.system: @resque.system.standard

  resque.system.standard:
    class: Resque\Component\System\StandardSystem

  resque.foreman:
    class: Resque\Component\Core\Foreman
    arguments:
      - @resque.worker.registry
      - @resque.event_dispatcher
      - @resque.system

  # Commands

  resque.command.job_enqueue:
    class: Resque\Bundle\ResqueBundle\Command\JobEnqueueCommand
    arguments:
      - @resque.queue.registry
      - @resque.queue.factory
    tags:
       - { name: console.command }

  resque.command.job_perform:
    class: Resque\Bundle\ResqueBundle\Command\JobPerformCommand
    arguments:
      - @resque.worker.job_performer
    tags:
       - { name: console.command }

  resque.command.queue_delete:
    class: Resque\Bundle\ResqueBundle\Command\QueueDeleteCommand
    arguments:
      - @resque.queue.registry
      - @resque.queue.factory
    tags:
       - { name: console.command }

  resque.command.queue_list:
    class: Resque\Bundle\ResqueBundle\Command\QueueListCommand
    arguments:
      - @resque.queue.registry
    tags:
       - { name: console.command }

  resque.command.worker_list:
    class: Resque\Bundle\ResqueBundle\Command\WorkerListCommand
    arguments:
      - @resque.worker.registry
    tags:
       - { name: console.command }

  resque.command.worker_start:
    class: Resque\Bundle\ResqueBundle\Command\WorkerStartCommand
    arguments:
      - @resque.queue.registry
      - @resque.worker.factory
      - @resque.foreman
    tags:
       - { name: console.command }

  # Worker

  resque.worker.registry_adapter:  @resque.array.worker_registry_adapter

  resque.worker.registry:
    class: Resque\Component\Worker\Registry\WorkerRegistry
    arguments:
      - @resque.worker.registry_adapter
      - @resque.event_dispatcher
      - @resque.worker.factory

  resque.worker.factory:
    class: Resque\Component\Worker\Factory\WorkerFactory
    arguments:
      - @resque.queue.factory
      - @resque.job.instance_factory
      - @resque.event_dispatcher
      - @resque.system

  resque.worker.job_performer:
    class: Resque\Component\Worker\JobPerformer
    arguments:
      - @resque.job.instance_factory
      - @resque.event_dispatcher

  # Queue

  resque.queue.registry_adapter:  @resque.array.queue_registry_adapter
  resque.queue.storage_adapter: @resque.array.queue_storage_adapter

  resque.queue.registry:
    class: Resque\Component\Queue\Registry\QueueRegistry
    arguments:
      - @resque.event_dispatcher
      - @resque.queue.registry_adapter
      - @resque.queue.factory

  resque.queue.factory:
    class: Resque\Component\Queue\Factory\QueueFactory
    arguments:
      - @resque.queue.storage_adapter
      - @resque.event_dispatcher

  # Job

  resque.job.instance_factory: @resque.job.instance_factory.container_aware

  resque.job.instance_factory.simple:
    class: Resque\Component\Job\Factory\JobInstanceFactory

  resque.job.instance_factory.container_aware:
    class: Resque\Bundle\ResqueBundle\Bridge\ContainerAwareJobInstanceFactory
    calls:
      - ['setContainer', [@service_container]]

  # Redis apdaters/storage

  resque.redis.client: @resque.redis.predis_bridge

  resque.redis.predis_bridge:
    class: Resque\Redis\Bridge\PredisBridge
    arguments:
      - @resque.redis.predis_client

  resque.redis.predis_client:
    class: Predis\Client
    arguments:
      - ''
      - {'prefix': 'resque:'}

  resque.redis.queue_registry_adapter:
    class: Resque\Redis\RedisQueueRegistryAdapter
    arguments:
      - @resque.redis.client

  resque.redis.queue_storage_adapter:
    class: Resque\Redis\RedisQueueStorage
    arguments:
      - @resque.redis.client

  resque.redis.worker_registry_adapter:
    class: Resque\Redis\RedisWorkerRegistryAdapter
    arguments:
      - @resque.redis.client

  # Array apdaters/storage

  resque.array.queue_registry_adapter:
    class: Resque\Bundle\ResqueBundle\ArrayAdapter\ArrayQueueRegistryAdapter

  resque.array.queue_storage_adapter:
    class: Resque\Bundle\ResqueBundle\ArrayAdapter\ArrayQueueStorage

  resque.array.worker_registry_adapter:
    class: Resque\Bundle\ResqueBundle\ArrayAdapter\ArrayWorkerRegistryAdapter
